version: '2'
services:
  zookeeper:
    platform: linux/amd64
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    platform: linux/amd64
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  classification-service:
    platform: linux/amd64
    build: classification-service
    hostname: classification-service
    container_name: classification-service
    volumes:
      - ./classification-service/:/app
    ports:
      - "5000:5000"

  data-streaming-service:
    platform: linux/amd64
    build: data-streaming-service
    hostname: data-streaming-service
    container_name: data-streaming-service
    depends_on:
      - kafka
    volumes:
      - ./data-streaming-service/:/app

  listener-service:
    platform: linux/amd64
    build: listener-service
    hostname: listener-service
    container_name: listener-service
    depends_on:
      - kafka
      - data-streaming-service
    volumes:
      - ./listener-service/:/app

  processing-service:
    platform: linux/amd64
    build: processing-service
    hostname: processing-service
    container_name: processing-service
    env_file:
      - ./processing-service/.env
    depends_on:
      - kafka
      - data-streaming-service
    restart: on-failure

  data-storage-service:
    platform: linux/amd64
    build: data-storage-service
    hostname: data-storage-service
    container_name: data-storage-service
    ports:
      - "8550:8550"
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass12345
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
volumes:
    mongodb-data: